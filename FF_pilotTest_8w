# -*- coding: utf-8 -*-
"""
Created on Mon Aug 06 12:23:19 2018

@author: Arella Gussow
"""

##change here for pilots
subject='i'
numTrials = 64 #total available: 32 TT (first in csv file) + 48 NON
b=40 #seconds till break

## participants see a break screen every so often (currently set to b = 40 sec)
## will not stop mid-trial - waits till post-trial.
## to continue, participants will press 'c'. 
## for experimenter only: 's' will quit experiment. participants do not know this.



import random
import csv
import sys
import numpy as np
from psychopy import visual, core, event, gui


#define keys to be used and corresponding phonemes from stim creation
vowels=['U','a','x','i']
onsets=['S','C','g','k']
codas=['b','p','f','v']

#1=onset, 2=vowel, 3=coda
capPos={'S':'1','C':'1','g':'1','k':'1',
          'U':'2','a':'2','x':'2','i':'2',
          'b':'3','p':'3','f':'3','v':'3'}

capKeys = {'S':'1','C':'2','g':'3','k':'4',
          'U':'c','a':'v','x':'n','i':'m','b':'8','p':'9','f':'0','v':'minus'}
keys=capKeys.values()


hand = {'S':'Left','C':'Left','g':'Left',
                   'k':'Left','U':'Left','a':'Left',
                   'x':'Right','i':'Right',
                   'b':'Right','p':'Right',
                   'f':'Right','v':'Right'}


finger = {'S':'pinky','C':'ring','k':'mid',
                   'g':'ind','U':'thumb', 'a': 'thumb',
                   'x':'thumb','i':'thumb',
                   'b':'ind','p':'mid',
                   'f':'ring','v':'pinky'}



### importing trials list from csv file ###
sep=','
def importTrials(numTrials):
    bTrial= open ('8wFF_stim.csv', 'rb')
    colNames = bTrial.next().rstrip().split(sep)
    reader=csv.DictReader(bTrial)
    global trialsList
    trialsList = []
    for t in range(numTrials):
        trialStr=bTrial.next().rstrip().split(sep)
        assert len(trialStr) == len(colNames)
        trialDict = dict(zip(colNames, trialStr))
        trialsList.append(trialDict)
importTrials(numTrials)

random.shuffle(trialsList)





## running from pre-saved pics
win = visual.Window([800, 500], fullscr=True,
                        color="white", units='pix')
breakText=visual.TextStim(win=win, height=40,
                 text="Please take a short break. Press 'c' to continue.",
                 color='grey')
endText=visual.TextStim(win=win, height=40,
                 text="All Done! Please call the experimenter.",
                 color='grey')

wrongText=visual.TextStim(win=win, height=40,
                 text="Look at the pattern again and give it another try.",
                 color='grey')


fixation= visual.ShapeStim(win, vertices=((0, -80), (0, 80), (0,0), 
                                               (80,0), (-80, 0)),
                                        lineWidth=5, closeShape=False, 
                                        lineColor='grey')

picW1 = visual.ImageStim(win=win, mask=None,interpolate=False,pos=(-300,0), size=(127,123))
picW2 = visual.ImageStim(win=win, mask=None,interpolate=False,pos=(-100,0), size=(127,123))
picW3 = visual.ImageStim(win=win, mask=None,interpolate=False,pos=(100,0), size=(127,123))
picW4 = visual.ImageStim(win=win, mask=None,interpolate=False,pos=(300,0), size=(127,123))


curLine = visual.ShapeStim(win=win, vertices=((-500,-100),(-400,-100)), lineColor='blue')



headers=['Accuracy', 'Rep', 'trialNum', 'wordPos', 'curWord',
                            'tapPos', 'expTap','RT', 'trialType',
                            'expHand', 'expFinger', 'ansKey', 
                            'ansCap', 'ansHand', 
                                'ansFinger', 'ansPos','errorType']



## shows 4 shapes in a row, waits for 36 key presses (= 4 words * 3 presses per 
## word * 3 repetitions). only keys from keyList are valid. 1 results line per
## key. break after 'b' time.
## No feedback provided. 

with open(subject+'_pilotTest8w.txt','w') as resultsFile:
    line='\t'.join(headers) + '\n'
    resultsFile.write(line)
    core.wait(2)
    breakTime=core.Clock()
    trialNum=0
    for trial in trialsList:
        wordPos=0
        trialNum+=1
        fixation.draw()
        win.flip()
        core.wait(1)              
        picW1.setImage('Shapes/shapesOGnames//'+trial['w1']+'.png')
        picW2.setImage('Shapes/shapesOGnames//'+trial['w2']+'.png')
        picW3.setImage('Shapes/shapesOGnames//'+trial['w3']+'.png')
        picW4.setImage('Shapes/shapesOGnames//'+trial['w4']+'.png')
        for rep in range(1,4):
            wordPos=0
            curLine.vertices = ((-550,-100),(-400,-100))
            for curWord in trial['fullTrial'].split():               
                curLine.vertices +=(200,0)
                picW1.draw()
                picW2.draw()
                picW3.draw()
                picW4.draw()
                curLine.draw()
                core.wait(0.5)
                win.flip()
                capInd=0
                wordPos+=1
                for curTap in curWord:
                    capInd+=1
                    timer=core.Clock()
                    ans=(event.waitKeys(keyList=keys))[0]
                    RT=int(timer.getTime()*(1000))
                    tapAcc=1 if ans==capKeys[curTap] else 0              
                    ansCap=capKeys.keys()[capKeys.values().index(ans)]
                    errorType= 'same' if (capPos[ansCap]==capInd) else 'diff'
                    errorType='NA' if tapAcc==1 else errorType
                    
                    string=[str(var) for var in tapAcc, rep, trialNum, wordPos, curWord,
                            capInd, curTap, capKeys[curTap], RT, trial['type'],
                                hand[curTap], finger[curTap], ans, ansCap, 
                                hand[ansCap], finger[ansCap], capPos[ansCap], errorType]
                    print string                             
                    line='\t'.join(string) + '\n'
                    resultsFile.write(line)
                    resultsFile.flush()
        
                
        core.wait(.5)           
        fixation.draw()
        win.flip()
        core.wait(.5)
                
        if int(breakTime.getTime())>b:
            breakClick=False
            while not breakClick:
                breakText.draw()
                win.flip()
                stop= event.waitKeys(['c','s'])
                if stop==['c']:
                    breakTime.reset()
                    breakClick=True
                elif stop==['s']:
                    win.close()
                    core.quit()
    
    endText.draw()
    resultsFile.close()
    win.flip()
    core.wait(5)
    win.close()
win.close()
core.quit()
